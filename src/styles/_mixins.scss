@mixin bp($point) {
  @if $point == large-desktop {
    @media (min-width: 1201px) { @content; }
  }
  @if $point == jumbo-desktop {
  	@media (min-width: 1600px) { @content; }
  }
  @else if $point == medium-desktop {
    @media (min-width: 601px) and (max-width: 1200px) { @content; }
  }
  @else if $point == small-desktop {
    @media (max-width: 600px)  { @content; }
  }
}

@mixin createBorder($h-padding: 0, $b-color: $border-color, $orientation: 'bottom') {
	content: "";
	left: $h-padding;
	right: $h-padding;
	height: 1px;
	background: $b-color;
	display: block;
	position: absolute;

	@if $orientation == 'bottom' {
		bottom: 0;
	} @else {
		top: 0;
	}
}

@mixin createX($background, $height) {
	&:before, &:after {
		content: "";
		background: $background;
		height: $height;
		width: 1px;
		position: absolute;
	}
	&:before {
		transform: rotate(45deg)
	}
	&:after {
		transform: rotate(-45deg)
	}
	cursor: pointer;
}

%circular-icon-button {
	border-radius: 50%;
  border: solid 1px darken($border-color, 10%);
  width: 2.5rem;
  height: 2.5rem;
  text-align: center;
  cursor: pointer;
  i {
    pointer-events: none;
    font-size: 1.5rem;
    line-height: 2.3rem;
  }
}

%subdued-label {
	font-size: 1rem;
  text-transform: uppercase;
  color: $subdued-text-color;
  font-weight: 500;
  letter-spacing: 1px;
}

%filters-subdued-label {
	letter-spacing: 1px;
	font-weight: 500;
	text-transform: uppercase;
	color: rgba($porcelain, .3);
	margin-bottom: 1.5rem;
}

%no-data-label {
	&:before {
    content: "No data";
    text-transform: uppercase;
    color: lighten($subdued-text-color, 10%);
    font-size: 5rem;
    display: block;
    text-align: center;
    position: absolute;
    font-weight: 800;
    top: 50%;
    left: 0;
    right: 0;
    transform: translateY(-50%);
  }
}

%dark-text-link {
	font-size: .8rem;
	letter-spacing: 1px;
	text-transform: uppercase;
	font-weight: 100;
	color: rgba($porcelain, .5);
	border-bottom: solid 1px rgba($porcelain, .5);
	display: inline-block;
	cursor: pointer;
	transition: all $transition-duration;
	&:hover {
		border-bottom: solid 1px rgba($porcelain, .75);
		color: rgba($porcelain, .75);
	}
}

%header {
	letter-spacing: 1px;
	text-transform: uppercase;
	font-size: 1.25rem;
	color: $highlight-text-color;
	font-weight: 500;
}

%clearfix {
	&:after {
		visibility: hidden;
		display: block;
		font-size: 0;
		content: " ";
		clear: both;
		height: 0;
	}
}

%material-design-shadow {
	box-shadow: 0 1px 2px rgba(0,0,0,0.1), 0 1px 2px rgba(0,0,0,0.2);
}

%floating-box {
	@extend %material-design-shadow;
	position: absolute;
	background: white;
	border-radius: 2px;
	padding: 2.5rem;
}

%dropdown-menu {
	padding-top: 4rem;
	@extend %floating-box;
	.close {
		top: .25rem;
		right: .25rem;
		position: absolute;
		width: 2rem;
		height: 2rem;
		text-align: center;
		cursor: pointer;
		i {
			font-size: 1.3rem;
			line-height: 2rem;
		}
	}
}

%timeline-relative-label {
	width: $timeline-left-side-width;
	padding: $module_padding;
	padding-top: 2.9rem;
	text-align: right;
	position: relative;
	.component-header {
		@extend %header;
	}	
}

%checkbox {
	cursor: pointer;
	.checkbox {
		cursor: pointer;
		margin-right: 1rem;
		margin-top: .2rem;
		display: inline-block;
		width: 1.1rem;
		height: 1.1rem;
		border: solid 1px $filters-subdued;
		position: relative;
		&[data-checked="false"] {
			i {
				display: none;
			}
		}
		i {
			top: -1px;
			left: -1px;
			position: absolute;
			font-size: 1.1rem;
			color: $filters-light;
			color: $gold;
		}
	}
	label {
		cursor: pointer;
		font-weight: 100;
		font-size: 1.2rem;
		display: inline-block;
		vertical-align: top;
	}
}